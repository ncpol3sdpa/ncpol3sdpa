from .runners import CCompilerRunner as CCompilerRunner, CppCompilerRunner as CppCompilerRunner, FortranCompilerRunner as FortranCompilerRunner
from .util import ArbitraryDepthGlob as ArbitraryDepthGlob, CompileError as CompileError, Glob as Glob, copy as copy, get_abspath as get_abspath, glob_at_depth as glob_at_depth, import_module_from_file as import_module_from_file, make_dirs as make_dirs, pyx_is_cplus as pyx_is_cplus, sha256_of_file as sha256_of_file, sha256_of_string as sha256_of_string
from _typeshed import Incomplete

objext: str

def compile_sources(files, Runner: Incomplete | None = None, destdir: Incomplete | None = None, cwd: Incomplete | None = None, keep_dir_struct: bool = False, per_file_kwargs: Incomplete | None = None, **kwargs): ...
def get_mixed_fort_c_linker(vendor: Incomplete | None = None, cplus: bool = False, cwd: Incomplete | None = None): ...
def link(obj_files, out_file: Incomplete | None = None, shared: bool = False, Runner: Incomplete | None = None, cwd: Incomplete | None = None, cplus: bool = False, fort: bool = False, extra_objs: Incomplete | None = None, **kwargs): ...
def link_py_so(obj_files, so_file: Incomplete | None = None, cwd: Incomplete | None = None, libraries: Incomplete | None = None, cplus: bool = False, fort: bool = False, extra_objs: Incomplete | None = None, **kwargs): ...
def simple_cythonize(src, destdir: Incomplete | None = None, cwd: Incomplete | None = None, **cy_kwargs): ...

extension_mapping: Incomplete

def src2obj(srcpath, Runner: Incomplete | None = None, objpath: Incomplete | None = None, cwd: Incomplete | None = None, inc_py: bool = False, **kwargs): ...
def pyx2obj(pyxpath, objpath: Incomplete | None = None, destdir: Incomplete | None = None, cwd: Incomplete | None = None, include_dirs: Incomplete | None = None, cy_kwargs: Incomplete | None = None, cplus: Incomplete | None = None, **kwargs): ...
def any_fortran_src(srcs): ...
def any_cplus_src(srcs): ...
def compile_link_import_py_ext(sources, extname: Incomplete | None = None, build_dir: str = '.', compile_kwargs: Incomplete | None = None, link_kwargs: Incomplete | None = None, extra_objs: Incomplete | None = None): ...
def compile_link_import_strings(sources, build_dir: Incomplete | None = None, **kwargs): ...
def compile_run_strings(sources, build_dir: Incomplete | None = None, clean: bool = False, compile_kwargs: Incomplete | None = None, link_kwargs: Incomplete | None = None): ...
