from _typeshed import Incomplete
from sympy.core import Basic as Basic, Eq as Eq, Integer as Integer, Tuple as Tuple, diff as diff, expand as expand
from sympy.core.numbers import Rational as Rational
from sympy.core.singleton import S as S
from sympy.core.sorting import ordered as ordered
from sympy.core.symbol import symbols as symbols
from sympy.functions.elementary.complexes import sign as sign
from sympy.functions.elementary.miscellaneous import sqrt as sqrt
from sympy.geometry import Point as Point
from sympy.ntheory.factor_ import core as core
from sympy.polys import total_degree as total_degree
from sympy.polys.polytools import gcd as gcd
from sympy.sets.sets import Complement as Complement
from sympy.solvers import diophantine as diophantine, nonlinsolve as nonlinsolve, solveset as solveset

class ImplicitRegion(Basic):
    def __new__(cls, variables, equation): ...
    @property
    def variables(self): ...
    @property
    def equation(self): ...
    @property
    def degree(self): ...
    def regular_point(self): ...
    def singular_points(self): ...
    def multiplicity(self, point): ...
    def rational_parametrization(self, parameters=('t', 's'), reg_point: Incomplete | None = None): ...

def conic_coeff(variables, equation): ...
