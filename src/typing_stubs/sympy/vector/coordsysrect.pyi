from _typeshed import Incomplete
from sympy.core import Dummy as Dummy, Lambda as Lambda, S as S
from sympy.core.basic import Basic as Basic
from sympy.core.cache import cacheit as cacheit
from sympy.core.containers import Tuple as Tuple
from sympy.core.function import diff as diff
from sympy.core.symbol import Str as Str, symbols as symbols
from sympy.functions.elementary.miscellaneous import sqrt as sqrt
from sympy.functions.elementary.trigonometric import acos as acos, atan2 as atan2, cos as cos, sin as sin
from sympy.matrices.dense import eye as eye
from sympy.matrices.immutable import ImmutableDenseMatrix as ImmutableDenseMatrix
from sympy.matrices.matrixbase import MatrixBase as MatrixBase
from sympy.simplify.simplify import simplify as simplify
from sympy.simplify.trigsimp import trigsimp as trigsimp
from sympy.solvers import solve as solve
from sympy.vector.orienters import AxisOrienter as AxisOrienter, BodyOrienter as BodyOrienter, Orienter as Orienter, QuaternionOrienter as QuaternionOrienter, SpaceOrienter as SpaceOrienter
from sympy.vector.scalar import BaseScalar as BaseScalar
from sympy.vector.vector import BaseVector as BaseVector

class CoordSys3D(Basic):
    def __new__(cls, name, transformation: Incomplete | None = None, parent: Incomplete | None = None, location: Incomplete | None = None, rotation_matrix: Incomplete | None = None, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None): ...
    def __iter__(self): ...
    @property
    def origin(self): ...
    def base_vectors(self): ...
    def base_scalars(self): ...
    def lame_coefficients(self): ...
    def transformation_to_parent(self): ...
    def transformation_from_parent(self): ...
    def transformation_from_parent_function(self): ...
    def rotation_matrix(self, other): ...
    def position_wrt(self, other): ...
    def scalar_map(self, other): ...
    def locate_new(self, name, position, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None): ...
    def orient_new(self, name, orienters, location: Incomplete | None = None, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None): ...
    def orient_new_axis(self, name, angle, axis, location: Incomplete | None = None, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None): ...
    def orient_new_body(self, name, angle1, angle2, angle3, rotation_order, location: Incomplete | None = None, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None): ...
    def orient_new_space(self, name, angle1, angle2, angle3, rotation_order, location: Incomplete | None = None, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None): ...
    def orient_new_quaternion(self, name, q0, q1, q2, q3, location: Incomplete | None = None, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None): ...
    def create_new(self, name, transformation, variable_names: Incomplete | None = None, vector_names: Incomplete | None = None): ...
    def __init__(self, name, location: Incomplete | None = None, rotation_matrix: Incomplete | None = None, parent: Incomplete | None = None, vector_names: Incomplete | None = None, variable_names: Incomplete | None = None, latex_vects: Incomplete | None = None, pretty_vects: Incomplete | None = None, latex_scalars: Incomplete | None = None, pretty_scalars: Incomplete | None = None, transformation: Incomplete | None = None) -> None: ...
