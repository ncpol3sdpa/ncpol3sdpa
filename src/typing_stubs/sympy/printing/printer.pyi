import inspect
from _typeshed import Incomplete
from collections.abc import Generator
from sympy.core.add import Add as Add
from sympy.core.basic import Basic as Basic
from sympy.core.function import AppliedUndef as AppliedUndef, Function as Function, UndefinedFunction as UndefinedFunction

def printer_context(printer, **kwargs) -> Generator[None]: ...

class Printer:
    printmethod: str
    def __init__(self, settings: Incomplete | None = None) -> None: ...
    @classmethod
    def set_global_settings(cls, **settings) -> None: ...
    @property
    def order(self): ...
    def doprint(self, expr): ...
    def emptyPrinter(self, expr): ...

class _PrintFunction:
    def __init__(self, f, print_cls: type[Printer]) -> None: ...
    def __reduce__(self): ...
    def __call__(self, *args, **kwargs): ...
    @property
    def __signature__(self) -> inspect.Signature: ...

def print_function(print_cls): ...
