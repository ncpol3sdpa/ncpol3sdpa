from _typeshed import Incomplete
from sympy.core import Add as Add, Float as Float, Mul as Mul, Pow as Pow, S as S, sympify as sympify
from sympy.core.basic import Basic as Basic
from sympy.core.expr import UnevaluatedExpr as UnevaluatedExpr
from sympy.core.function import Lambda as Lambda
from sympy.core.sorting import default_sort_key as default_sort_key
from sympy.core.symbol import Symbol as Symbol
from sympy.functions.elementary.complexes import re as re
from sympy.printing.precedence import PRECEDENCE as PRECEDENCE, precedence as precedence
from sympy.printing.str import StrPrinter as StrPrinter

class requires:
    def __init__(self, **kwargs) -> None: ...
    def __call__(self, method): ...

class AssignmentError(Exception): ...
class PrintMethodNotImplementedError(NotImplementedError): ...

class CodePrinter(StrPrinter):
    reserved_words: Incomplete
    def __init__(self, settings: Incomplete | None = None) -> None: ...
    def doprint(self, expr, assign_to: Incomplete | None = None): ...

def ccode(expr, assign_to: Incomplete | None = None, standard: str = 'c99', **settings): ...
def print_ccode(expr, **settings) -> None: ...
def fcode(expr, assign_to: Incomplete | None = None, **settings): ...
def print_fcode(expr, **settings) -> None: ...
def cxxcode(expr, assign_to: Incomplete | None = None, standard: str = 'c++11', **settings): ...
