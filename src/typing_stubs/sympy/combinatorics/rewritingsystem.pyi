from _typeshed import Incomplete
from sympy.combinatorics.rewritingsystem_fsm import StateMachine as StateMachine

class RewritingSystem:
    group: Incomplete
    alphabet: Incomplete
    maxeqns: int
    tidyint: int
    reduction_automaton: Incomplete
    rules: Incomplete
    rules_cache: Incomplete
    def __init__(self, group) -> None: ...
    def set_max(self, n) -> None: ...
    @property
    def is_confluent(self): ...
    def add_rule(self, w1, w2, check: bool = False): ...
    def make_confluent(self, check: bool = False): ...
    def reduce(self, word, exclude: Incomplete | None = None): ...
    def construct_automaton(self) -> None: ...
    def reduce_using_automaton(self, word): ...
