from sympy.combinatorics.graycode import GrayCode as GrayCode

class Subset:
    def __new__(cls, subset, superset): ...
    def __eq__(self, other): ...
    def iterate_binary(self, k): ...
    def next_binary(self): ...
    def prev_binary(self): ...
    def next_lexicographic(self): ...
    def prev_lexicographic(self): ...
    def iterate_graycode(self, k): ...
    def next_gray(self): ...
    def prev_gray(self): ...
    @property
    def rank_binary(self): ...
    @property
    def rank_lexicographic(self): ...
    @property
    def rank_gray(self): ...
    @property
    def subset(self): ...
    @property
    def size(self): ...
    @property
    def superset(self): ...
    @property
    def superset_size(self): ...
    @property
    def cardinality(self): ...
    @classmethod
    def subset_from_bitlist(self, super_set, bitlist): ...
    @classmethod
    def bitlist_from_subset(self, subset, superset): ...
    @classmethod
    def unrank_binary(self, rank, superset): ...
    @classmethod
    def unrank_gray(self, rank, superset): ...
    @classmethod
    def subset_indices(self, subset, superset): ...

def ksubsets(superset, k): ...
