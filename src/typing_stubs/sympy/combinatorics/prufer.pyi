from sympy.core import Basic as Basic
from sympy.core.containers import Tuple as Tuple
from sympy.tensor.array import Array as Array
from sympy.utilities.iterables import flatten as flatten, iterable as iterable
from sympy.utilities.misc import as_int as as_int

class Prufer(Basic):
    @property
    def prufer_repr(self): ...
    @property
    def tree_repr(self): ...
    @property
    def nodes(self): ...
    @property
    def rank(self): ...
    @property
    def size(self): ...
    @staticmethod
    def to_prufer(tree, n): ...
    @staticmethod
    def to_tree(prufer): ...
    @staticmethod
    def edges(*runs): ...
    def prufer_rank(self): ...
    @classmethod
    def unrank(self, rank, n): ...
    def __new__(cls, *args, **kw_args): ...
    def next(self, delta: int = 1): ...
    def prev(self, delta: int = 1): ...
