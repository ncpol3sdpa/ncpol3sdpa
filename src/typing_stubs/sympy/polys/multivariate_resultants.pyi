from _typeshed import Incomplete
from sympy.core.mul import Mul as Mul
from sympy.functions.combinatorial.factorials import binomial as binomial
from sympy.matrices.dense import Matrix as Matrix, diag as diag
from sympy.polys.monomials import itermonomials as itermonomials, monomial_deg as monomial_deg
from sympy.polys.orderings import monomial_key as monomial_key
from sympy.polys.polytools import Poly as Poly, degree_list as degree_list, poly_from_expr as poly_from_expr, rem as rem, total_degree as total_degree
from sympy.simplify.simplify import simplify as simplify
from sympy.tensor.indexed import IndexedBase as IndexedBase
from sympy.utilities.exceptions import sympy_deprecation_warning as sympy_deprecation_warning

class DixonResultant:
    polynomials: Incomplete
    variables: Incomplete
    n: Incomplete
    m: Incomplete
    dummy_variables: Incomplete
    def __init__(self, polynomials, variables) -> None: ...
    @property
    def max_degrees(self): ...
    def get_dixon_polynomial(self): ...
    def get_upper_degree(self): ...
    def get_max_degrees(self, polynomial): ...
    def get_dixon_matrix(self, polynomial): ...
    def KSY_precondition(self, matrix): ...
    def delete_zero_rows_and_columns(self, matrix): ...
    def product_leading_entries(self, matrix): ...
    def get_KSY_Dixon_resultant(self, matrix): ...

class MacaulayResultant:
    polynomials: Incomplete
    variables: Incomplete
    n: Incomplete
    degrees: Incomplete
    degree_m: Incomplete
    monomials_size: Incomplete
    monomial_set: Incomplete
    def __init__(self, polynomials, variables) -> None: ...
    def get_size(self): ...
    def get_monomials_of_certain_degree(self, degree): ...
    def get_row_coefficients(self): ...
    def get_matrix(self): ...
    def get_reduced_nonreduced(self): ...
    def get_submatrix(self, matrix): ...
