from _typeshed import Incomplete
from sympy.external.gmpy import GROUND_TYPES as GROUND_TYPES
from sympy.polys.densearith import dmp_add as dmp_add, dmp_add_mul as dmp_add_mul, dmp_div as dmp_div, dmp_expand as dmp_expand, dmp_max_norm as dmp_max_norm, dmp_mul as dmp_mul, dmp_mul_ground as dmp_mul_ground, dmp_neg as dmp_neg, dmp_pow as dmp_pow, dmp_quo as dmp_quo, dmp_quo_ground as dmp_quo_ground, dmp_sub as dmp_sub, dmp_sub_mul as dmp_sub_mul, dup_add as dup_add, dup_div as dup_div, dup_l1_norm as dup_l1_norm, dup_lshift as dup_lshift, dup_max_norm as dup_max_norm, dup_mul as dup_mul, dup_mul_ground as dup_mul_ground, dup_neg as dup_neg, dup_quo as dup_quo, dup_quo_ground as dup_quo_ground, dup_sqr as dup_sqr, dup_sub as dup_sub, dup_sub_mul as dup_sub_mul
from sympy.polys.densebasic import dmp_LC as dmp_LC, dmp_convert as dmp_convert, dmp_degree as dmp_degree, dmp_degree_in as dmp_degree_in, dmp_degree_list as dmp_degree_list, dmp_eject as dmp_eject, dmp_exclude as dmp_exclude, dmp_from_dict as dmp_from_dict, dmp_ground as dmp_ground, dmp_ground_LC as dmp_ground_LC, dmp_include as dmp_include, dmp_inject as dmp_inject, dmp_nest as dmp_nest, dmp_one as dmp_one, dmp_raise as dmp_raise, dmp_terms_gcd as dmp_terms_gcd, dmp_zero_p as dmp_zero_p, dup_LC as dup_LC, dup_TC as dup_TC, dup_convert as dup_convert, dup_degree as dup_degree, dup_inflate as dup_inflate, dup_strip as dup_strip, dup_terms_gcd as dup_terms_gcd
from sympy.polys.densetools import dmp_clear_denoms as dmp_clear_denoms, dmp_diff_eval_in as dmp_diff_eval_in, dmp_eval_in as dmp_eval_in, dmp_eval_tail as dmp_eval_tail, dmp_ground_monic as dmp_ground_monic, dmp_ground_primitive as dmp_ground_primitive, dmp_ground_trunc as dmp_ground_trunc, dmp_shift as dmp_shift, dup_clear_denoms as dup_clear_denoms, dup_content as dup_content, dup_mirror as dup_mirror, dup_monic as dup_monic, dup_primitive as dup_primitive, dup_shift as dup_shift, dup_trunc as dup_trunc
from sympy.polys.euclidtools import dmp_inner_gcd as dmp_inner_gcd, dmp_primitive as dmp_primitive, dup_inner_gcd as dup_inner_gcd
from sympy.polys.galoistools import gf_add_mul as gf_add_mul, gf_div as gf_div, gf_factor as gf_factor, gf_factor_sqf as gf_factor_sqf, gf_from_int_poly as gf_from_int_poly, gf_gcdex as gf_gcdex, gf_lshift as gf_lshift, gf_mul as gf_mul, gf_rem as gf_rem, gf_sqf_p as gf_sqf_p, gf_to_int_poly as gf_to_int_poly
from sympy.polys.polyconfig import query as query
from sympy.polys.polyerrors import CoercionFailed as CoercionFailed, DomainError as DomainError, EvaluationFailed as EvaluationFailed, ExtraneousFactors as ExtraneousFactors
from sympy.polys.sqfreetools import dmp_sqf_norm as dmp_sqf_norm, dmp_sqf_part as dmp_sqf_part, dup_sqf_norm as dup_sqf_norm, dup_sqf_p as dup_sqf_p, dup_sqf_part as dup_sqf_part
from sympy.utilities import subsets as subsets

def dup_trial_division(f, factors, K): ...
def dmp_trial_division(f, factors, u, K): ...
def dup_zz_mignotte_bound(f, K): ...
def dmp_zz_mignotte_bound(f, u, K): ...
def dup_zz_hensel_step(m, f, g, h, s, t, K): ...
def dup_zz_hensel_lift(p, f, f_list, l, K): ...
def dup_zz_zassenhaus(f, K): ...
def dup_zz_irreducible_p(f, K): ...
def dup_cyclotomic_p(f, K, irreducible: bool = False): ...
def dup_zz_cyclotomic_poly(n, K): ...
def dup_zz_cyclotomic_factor(f, K): ...
def dup_zz_factor_sqf(f, K): ...
def dup_zz_factor(f, K): ...
def dmp_zz_wang_non_divisors(E, cs, ct, K): ...
def dmp_zz_wang_test_points(f, T, ct, A, u, K): ...
def dmp_zz_wang_lead_coeffs(f, T, cs, E, H, A, u, K): ...
def dup_zz_diophantine(F, m, p, K): ...
def dmp_zz_diophantine(F, c, A, d, p, u, K): ...
def dmp_zz_wang_hensel_lifting(f, H, LC, A, p, u, K): ...
def dmp_zz_wang(f, u, K, mod: Incomplete | None = None, seed: Incomplete | None = None): ...
def dmp_zz_factor(f, u, K): ...
def dup_qq_i_factor(f, K0): ...
def dup_zz_i_factor(f, K0): ...
def dmp_qq_i_factor(f, u, K0): ...
def dmp_zz_i_factor(f, u, K0): ...
def dup_ext_factor(f, K): ...
def dmp_ext_factor(f, u, K): ...
def dup_gf_factor(f, K): ...
def dmp_gf_factor(f, u, K) -> None: ...
def dup_factor_list(f, K0): ...
def dup_factor_list_include(f, K): ...
def dmp_factor_list(f, u, K0): ...
def dmp_factor_list_include(f, u, K): ...
def dup_irreducible_p(f, K): ...
def dmp_irreducible_p(f, u, K): ...
