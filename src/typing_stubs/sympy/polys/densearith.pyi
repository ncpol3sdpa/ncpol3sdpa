from sympy.polys.densebasic import dmp_LC as dmp_LC, dmp_degree as dmp_degree, dmp_ground as dmp_ground, dmp_one as dmp_one, dmp_one_p as dmp_one_p, dmp_strip as dmp_strip, dmp_zero as dmp_zero, dmp_zero_p as dmp_zero_p, dmp_zeros as dmp_zeros, dup_LC as dup_LC, dup_degree as dup_degree, dup_slice as dup_slice, dup_strip as dup_strip
from sympy.polys.polyerrors import ExactQuotientFailed as ExactQuotientFailed, PolynomialDivisionFailed as PolynomialDivisionFailed

def dup_add_term(f, c, i, K): ...
def dmp_add_term(f, c, i, u, K): ...
def dup_sub_term(f, c, i, K): ...
def dmp_sub_term(f, c, i, u, K): ...
def dup_mul_term(f, c, i, K): ...
def dmp_mul_term(f, c, i, u, K): ...
def dup_add_ground(f, c, K): ...
def dmp_add_ground(f, c, u, K): ...
def dup_sub_ground(f, c, K): ...
def dmp_sub_ground(f, c, u, K): ...
def dup_mul_ground(f, c, K): ...
def dmp_mul_ground(f, c, u, K): ...
def dup_quo_ground(f, c, K): ...
def dmp_quo_ground(f, c, u, K): ...
def dup_exquo_ground(f, c, K): ...
def dmp_exquo_ground(f, c, u, K): ...
def dup_lshift(f, n, K): ...
def dup_rshift(f, n, K): ...
def dup_abs(f, K): ...
def dmp_abs(f, u, K): ...
def dup_neg(f, K): ...
def dmp_neg(f, u, K): ...
def dup_add(f, g, K): ...
def dmp_add(f, g, u, K): ...
def dup_sub(f, g, K): ...
def dmp_sub(f, g, u, K): ...
def dup_add_mul(f, g, h, K): ...
def dmp_add_mul(f, g, h, u, K): ...
def dup_sub_mul(f, g, h, K): ...
def dmp_sub_mul(f, g, h, u, K): ...
def dup_mul(f, g, K): ...
def dmp_mul(f, g, u, K): ...
def dup_sqr(f, K): ...
def dmp_sqr(f, u, K): ...
def dup_pow(f, n, K): ...
def dmp_pow(f, n, u, K): ...
def dup_pdiv(f, g, K): ...
def dup_prem(f, g, K): ...
def dup_pquo(f, g, K): ...
def dup_pexquo(f, g, K): ...
def dmp_pdiv(f, g, u, K): ...
def dmp_prem(f, g, u, K): ...
def dmp_pquo(f, g, u, K): ...
def dmp_pexquo(f, g, u, K): ...
def dup_rr_div(f, g, K): ...
def dmp_rr_div(f, g, u, K): ...
def dup_ff_div(f, g, K): ...
def dmp_ff_div(f, g, u, K): ...
def dup_div(f, g, K): ...
def dup_rem(f, g, K): ...
def dup_quo(f, g, K): ...
def dup_exquo(f, g, K): ...
def dmp_div(f, g, u, K): ...
def dmp_rem(f, g, u, K): ...
def dmp_quo(f, g, u, K): ...
def dmp_exquo(f, g, u, K): ...
def dup_max_norm(f, K): ...
def dmp_max_norm(f, u, K): ...
def dup_l1_norm(f, K): ...
def dmp_l1_norm(f, u, K): ...
def dup_l2_norm_squared(f, K): ...
def dmp_l2_norm_squared(f, u, K): ...
def dup_expand(polys, K): ...
def dmp_expand(polys, u, K): ...
