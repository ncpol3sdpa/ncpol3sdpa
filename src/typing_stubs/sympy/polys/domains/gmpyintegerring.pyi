from _typeshed import Incomplete
from sympy.polys.domains.groundtypes import GMPYInteger
from sympy.polys.domains.integerring import IntegerRing

__all__ = ['GMPYIntegerRing']

class GMPYIntegerRing(IntegerRing):
    dtype = GMPYInteger
    zero: Incomplete
    one: Incomplete
    tp: Incomplete
    alias: str
    def __init__(self) -> None: ...
    def to_sympy(self, a): ...
    def from_sympy(self, a): ...
    def from_FF_python(K1, a, K0): ...
    def from_ZZ_python(K1, a, K0): ...
    def from_QQ(K1, a, K0): ...
    def from_QQ_python(K1, a, K0): ...
    def from_FF_gmpy(K1, a, K0): ...
    def from_ZZ_gmpy(K1, a, K0): ...
    def from_QQ_gmpy(K1, a, K0): ...
    def from_RealField(K1, a, K0): ...
    def from_GaussianIntegerRing(K1, a, K0): ...
    def gcdex(self, a, b): ...
    def gcd(self, a, b): ...
    def lcm(self, a, b): ...
    def sqrt(self, a): ...
    def factorial(self, a): ...
