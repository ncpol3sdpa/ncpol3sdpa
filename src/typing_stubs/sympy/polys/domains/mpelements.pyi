from _typeshed import Incomplete
from mpmath.ctx_mp_python import PythonMPContext, _mpc, _mpf
from sympy.polys.domains.domainelement import DomainElement

__all__ = ['RealElement', 'ComplexElement', 'MPContext']

class RealElement(_mpf, DomainElement):
    def parent(self): ...

class ComplexElement(_mpc, DomainElement):
    def parent(self): ...

class MPContext(PythonMPContext):
    def __init__(ctx, prec: int = 53, dps: Incomplete | None = None, tol: Incomplete | None = None, real: bool = False) -> None: ...
    def make_tol(ctx): ...
    def to_rational(ctx, s, limit: bool = True): ...
    def almosteq(ctx, s, t, rel_eps: Incomplete | None = None, abs_eps: Incomplete | None = None): ...
