from _typeshed import Incomplete
from sympy.categories import CompositeMorphism as CompositeMorphism, Diagram as Diagram, IdentityMorphism as IdentityMorphism, NamedMorphism as NamedMorphism
from sympy.core import Dict as Dict, Symbol as Symbol, default_sort_key as default_sort_key
from sympy.printing.latex import latex as latex
from sympy.sets import FiniteSet as FiniteSet
from sympy.utilities.decorator import doctest_depends_on as doctest_depends_on
from sympy.utilities.iterables import iterable as iterable

__doctest_requires__: Incomplete

class _GrowableGrid:
    def __init__(self, width, height) -> None: ...
    @property
    def width(self): ...
    @property
    def height(self): ...
    def __getitem__(self, i_j): ...
    def __setitem__(self, i_j, newvalue) -> None: ...
    def append_row(self) -> None: ...
    def append_column(self) -> None: ...
    def prepend_row(self) -> None: ...
    def prepend_column(self) -> None: ...

class DiagramGrid:
    def __init__(self, diagram, groups: Incomplete | None = None, **hints) -> None: ...
    @property
    def width(self): ...
    @property
    def height(self): ...
    def __getitem__(self, i_j): ...
    @property
    def morphisms(self): ...

class ArrowStringDescription:
    unit: Incomplete
    curving: Incomplete
    curving_amount: Incomplete
    looping_start: Incomplete
    looping_end: Incomplete
    horizontal_direction: Incomplete
    vertical_direction: Incomplete
    label_position: Incomplete
    label: Incomplete
    label_displacement: str
    arrow_style: str
    forced_label_position: bool
    def __init__(self, unit, curving, curving_amount, looping_start, looping_end, horizontal_direction, vertical_direction, label_position, label) -> None: ...

class XypicDiagramDrawer:
    unit: str
    default_curving_amount: int
    default_curving_step: int
    arrow_formatters: Incomplete
    default_arrow_formatter: Incomplete
    def __init__(self) -> None: ...
    def draw(self, diagram, grid, masked: Incomplete | None = None, diagram_format: str = ''): ...

def xypic_draw_diagram(diagram, masked: Incomplete | None = None, diagram_format: str = '', groups: Incomplete | None = None, **hints): ...
def preview_diagram(diagram, masked: Incomplete | None = None, diagram_format: str = '', groups: Incomplete | None = None, output: str = 'png', viewer: Incomplete | None = None, euler: bool = True, **hints) -> None: ...
