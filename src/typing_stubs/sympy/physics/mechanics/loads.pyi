from _typeshed import Incomplete
from abc import ABC
from typing import NamedTuple

__all__ = ['LoadBase', 'Force', 'Torque']

class LoadBase(ABC, NamedTuple('LoadBase', [('location', Incomplete), ('vector', Incomplete)])):
    def __add__(self, other) -> None: ...
    def __mul__(self, other) -> None: ...
    __radd__ = __add__
    __rmul__ = __mul__

class Force(LoadBase):
    def __new__(cls, point, force): ...
    @property
    def point(self): ...
    @property
    def force(self): ...

class Torque(LoadBase):
    def __new__(cls, frame, torque): ...
    @property
    def frame(self): ...
    @property
    def torque(self): ...
