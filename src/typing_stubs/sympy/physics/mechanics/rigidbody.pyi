from _typeshed import Incomplete
from sympy.physics.mechanics.body_base import BodyBase

__all__ = ['RigidBody']

class RigidBody(BodyBase):
    def __init__(self, name, masscenter: Incomplete | None = None, frame: Incomplete | None = None, mass: Incomplete | None = None, inertia: Incomplete | None = None) -> None: ...
    @property
    def frame(self): ...
    @frame.setter
    def frame(self, F) -> None: ...
    @property
    def x(self): ...
    @property
    def y(self): ...
    @property
    def z(self): ...
    @property
    def inertia(self): ...
    @inertia.setter
    def inertia(self, I) -> None: ...
    @property
    def central_inertia(self): ...
    @central_inertia.setter
    def central_inertia(self, I) -> None: ...
    def linear_momentum(self, frame): ...
    def angular_momentum(self, point, frame): ...
    def kinetic_energy(self, frame): ...
    potential_energy: Incomplete
    def set_potential_energy(self, scalar) -> None: ...
    def parallel_axis(self, point, frame: Incomplete | None = None): ...
