from _typeshed import Incomplete
from sympy.core.evalf import EvalfMixin
from sympy.printing.defaults import Printable

__all__ = ['Dyadic']

class Dyadic(Printable, EvalfMixin):
    is_number: bool
    args: Incomplete
    def __init__(self, inlist) -> None: ...
    @property
    def func(self): ...
    def __add__(self, other): ...
    __radd__ = __add__
    def __mul__(self, other): ...
    __rmul__ = __mul__
    def dot(self, other): ...
    __and__ = dot
    def __truediv__(self, other): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __neg__(self): ...
    def __rsub__(self, other): ...
    def __sub__(self, other): ...
    def cross(self, other): ...
    __xor__ = cross
    def express(self, frame1, frame2: Incomplete | None = None): ...
    def to_matrix(self, reference_frame, second_reference_frame: Incomplete | None = None): ...
    def doit(self, **hints): ...
    def dt(self, frame): ...
    def simplify(self): ...
    def subs(self, *args, **kwargs): ...
    def applyfunc(self, f): ...
    def xreplace(self, rule): ...
