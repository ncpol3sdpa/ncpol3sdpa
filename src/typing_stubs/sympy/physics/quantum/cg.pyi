from _typeshed import Incomplete
from sympy.core.expr import Expr

__all__ = ['CG', 'Wigner3j', 'Wigner6j', 'Wigner9j', 'cg_simp']

class Wigner3j(Expr):
    is_commutative: bool
    def __new__(cls, j1, m1, j2, m2, j3, m3): ...
    @property
    def j1(self): ...
    @property
    def m1(self): ...
    @property
    def j2(self): ...
    @property
    def m2(self): ...
    @property
    def j3(self): ...
    @property
    def m3(self): ...
    @property
    def is_symbolic(self): ...
    def doit(self, **hints): ...

class CG(Wigner3j):
    precedence: Incomplete
    def doit(self, **hints): ...

class Wigner6j(Expr):
    def __new__(cls, j1, j2, j12, j3, j, j23): ...
    @property
    def j1(self): ...
    @property
    def j2(self): ...
    @property
    def j12(self): ...
    @property
    def j3(self): ...
    @property
    def j(self): ...
    @property
    def j23(self): ...
    @property
    def is_symbolic(self): ...
    def doit(self, **hints): ...

class Wigner9j(Expr):
    def __new__(cls, j1, j2, j12, j3, j4, j34, j13, j24, j): ...
    @property
    def j1(self): ...
    @property
    def j2(self): ...
    @property
    def j12(self): ...
    @property
    def j3(self): ...
    @property
    def j4(self): ...
    @property
    def j34(self): ...
    @property
    def j13(self): ...
    @property
    def j24(self): ...
    @property
    def j(self): ...
    @property
    def is_symbolic(self): ...
    def doit(self, **hints): ...

def cg_simp(e): ...
