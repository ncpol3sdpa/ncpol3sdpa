from sympy.physics.quantum import Bra, Ket, Operator

__all__ = ['BosonOp', 'BosonFockKet', 'BosonFockBra', 'BosonCoherentKet', 'BosonCoherentBra']

class BosonOp(Operator):
    @property
    def name(self): ...
    @property
    def is_annihilation(self): ...
    @classmethod
    def default_args(self): ...
    def __new__(cls, *args, **hints): ...
    def __mul__(self, other): ...

class BosonFockKet(Ket):
    def __new__(cls, n): ...
    @property
    def n(self): ...
    @classmethod
    def dual_class(self): ...

class BosonFockBra(Bra):
    def __new__(cls, n): ...
    @property
    def n(self): ...
    @classmethod
    def dual_class(self): ...

class BosonCoherentKet(Ket):
    def __new__(cls, alpha): ...
    @property
    def alpha(self): ...
    @classmethod
    def dual_class(self): ...

class BosonCoherentBra(Bra):
    def __new__(cls, alpha): ...
    @property
    def alpha(self): ...
    @classmethod
    def dual_class(self): ...
