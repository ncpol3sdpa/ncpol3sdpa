from sympy.physics.quantum import Bra, Ket, Operator

__all__ = ['SigmaX', 'SigmaY', 'SigmaZ', 'SigmaMinus', 'SigmaPlus', 'SigmaZKet', 'SigmaZBra', 'qsimplify_pauli']

class SigmaOpBase(Operator):
    @property
    def name(self): ...
    @property
    def use_name(self): ...
    @classmethod
    def default_args(self): ...
    def __new__(cls, *args, **hints): ...

class SigmaX(SigmaOpBase):
    def __new__(cls, *args, **hints): ...

class SigmaY(SigmaOpBase):
    def __new__(cls, *args, **hints): ...

class SigmaZ(SigmaOpBase):
    def __new__(cls, *args, **hints): ...

class SigmaMinus(SigmaOpBase):
    def __new__(cls, *args, **hints): ...

class SigmaPlus(SigmaOpBase):
    def __new__(cls, *args, **hints): ...

class SigmaZKet(Ket):
    def __new__(cls, n): ...
    @property
    def n(self): ...
    @classmethod
    def dual_class(self): ...

class SigmaZBra(Bra):
    def __new__(cls, n): ...
    @property
    def n(self): ...
    @classmethod
    def dual_class(self): ...

def qsimplify_pauli(e): ...
