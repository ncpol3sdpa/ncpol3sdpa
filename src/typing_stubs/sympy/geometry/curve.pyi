from _typeshed import Incomplete
from sympy.core import diff as diff
from sympy.core.containers import Tuple as Tuple
from sympy.functions.elementary.miscellaneous import sqrt as sqrt
from sympy.geometry.entity import GeometryEntity as GeometryEntity, GeometrySet as GeometrySet
from sympy.geometry.point import Point as Point
from sympy.integrals import integrate as integrate
from sympy.matrices import Matrix as Matrix, rot_axis3 as rot_axis3
from sympy.utilities.iterables import is_sequence as is_sequence

class Curve(GeometrySet):
    def __new__(cls, function, limits): ...
    def __call__(self, f): ...
    def arbitrary_point(self, parameter: str = 't'): ...
    @property
    def free_symbols(self): ...
    @property
    def ambient_dimension(self): ...
    @property
    def functions(self): ...
    @property
    def limits(self): ...
    @property
    def parameter(self): ...
    @property
    def length(self): ...
    def plot_interval(self, parameter: str = 't'): ...
    def rotate(self, angle: int = 0, pt: Incomplete | None = None): ...
    def scale(self, x: int = 1, y: int = 1, pt: Incomplete | None = None): ...
    def translate(self, x: int = 0, y: int = 0): ...
