from _typeshed import Incomplete
from collections.abc import Generator
from sympy.core.numbers import Integer as Integer
from sympy.core.singleton import S as S
from sympy.core.symbol import Symbol as Symbol
from sympy.core.sympify import sympify as sympify

class PlotInterval:
    def require_all_args(f): ...
    v: Incomplete
    v_min: Incomplete
    v_max: Incomplete
    v_steps: Incomplete
    def __init__(self, *args) -> None: ...
    def get_v(self): ...
    def set_v(self, v) -> None: ...
    def get_v_min(self): ...
    def set_v_min(self, v_min) -> None: ...
    def get_v_max(self): ...
    def set_v_max(self, v_max) -> None: ...
    def get_v_steps(self): ...
    def set_v_steps(self, v_steps) -> None: ...
    def get_v_len(self): ...
    v_len: Incomplete
    def fill_from(self, b) -> None: ...
    @staticmethod
    def try_parse(*args): ...
    def assert_complete(self) -> None: ...
    def vrange(self) -> Generator[Incomplete]: ...
    def vrange2(self) -> Generator[Incomplete]: ...
    def frange(self) -> Generator[Incomplete]: ...
