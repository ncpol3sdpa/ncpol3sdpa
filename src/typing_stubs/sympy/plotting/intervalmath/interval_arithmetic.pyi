from .interval_membership import intervalMembership as intervalMembership
from _typeshed import Incomplete
from sympy.core.logic import fuzzy_and as fuzzy_and
from sympy.core.numbers import int_valued as int_valued
from sympy.simplify.simplify import nsimplify as nsimplify

class interval:
    is_valid: Incomplete
    start: Incomplete
    end: Incomplete
    def __init__(self, *args, is_valid: bool = True, **kwargs) -> None: ...
    @property
    def mid(self): ...
    @property
    def width(self): ...
    def __lt__(self, other): ...
    def __gt__(self, other): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __le__(self, other): ...
    def __ge__(self, other): ...
    def __add__(self, other): ...
    __radd__ = __add__
    def __sub__(self, other): ...
    def __rsub__(self, other): ...
    def __neg__(self): ...
    def __mul__(self, other): ...
    __rmul__ = __mul__
    def __contains__(self, other) -> bool: ...
    def __rtruediv__(self, other): ...
    def __truediv__(self, other): ...
    def __pow__(self, other): ...
    def __rpow__(self, other): ...
    def __hash__(self): ...
