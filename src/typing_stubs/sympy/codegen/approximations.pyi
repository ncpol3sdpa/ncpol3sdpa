from _typeshed import Incomplete
from sympy.calculus.singularities import is_decreasing as is_decreasing, is_increasing as is_increasing
from sympy.codegen.rewriting import Optimization as Optimization
from sympy.core.function import UndefinedFunction as UndefinedFunction
from sympy.sets.sets import Interval as Interval

class SumApprox(Optimization):
    bounds: Incomplete
    reltol: Incomplete
    def __init__(self, bounds, reltol, **kwargs) -> None: ...
    def __call__(self, expr): ...
    def query(self, expr): ...
    def value(self, add): ...

class SeriesApprox(Optimization):
    bounds: Incomplete
    reltol: Incomplete
    max_order: Incomplete
    n_point_checks: Incomplete
    def __init__(self, bounds, reltol, max_order: int = 4, n_point_checks: int = 4, **kwargs) -> None: ...
    def __call__(self, expr): ...
    def query(self, expr): ...
    def value(self, fexpr): ...
