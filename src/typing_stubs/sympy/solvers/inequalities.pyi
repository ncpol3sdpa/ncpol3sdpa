from sympy.calculus.util import continuous_domain as continuous_domain, function_range as function_range, periodicity as periodicity
from sympy.core import sympify as sympify
from sympy.core.exprtools import factor_terms as factor_terms
from sympy.core.function import expand_mul as expand_mul
from sympy.core.relational import Eq as Eq, Ge as Ge, Lt as Lt, Relational as Relational
from sympy.core.singleton import S as S
from sympy.core.symbol import Dummy as Dummy, Symbol as Symbol
from sympy.functions.elementary.complexes import Abs as Abs
from sympy.logic import And as And
from sympy.polys import Poly as Poly, PolynomialError as PolynomialError, parallel_poly_from_expr as parallel_poly_from_expr
from sympy.sets.sets import FiniteSet as FiniteSet, Intersection as Intersection, Interval as Interval, Union as Union
from sympy.solvers.solveset import solveset as solveset, solvify as solvify
from sympy.utilities.iterables import iterable as iterable, sift as sift
from sympy.utilities.misc import filldedent as filldedent

def solve_poly_inequality(poly, rel): ...
def solve_poly_inequalities(polys): ...
def solve_rational_inequalities(eqs): ...
def reduce_rational_inequalities(exprs, gen, relational: bool = True): ...
def reduce_abs_inequality(expr, rel, gen): ...
def reduce_abs_inequalities(exprs, gen): ...
def solve_univariate_inequality(expr, gen, relational: bool = True, domain=..., continuous: bool = False): ...
def reduce_inequalities(inequalities, symbols=[]): ...
