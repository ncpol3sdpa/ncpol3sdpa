from sympy.core import Basic as Basic, Tuple as Tuple
from sympy.core.expr import Expr as Expr
from sympy.core.numbers import Integer as Integer
from sympy.core.symbol import Symbol as Symbol
from sympy.core.sympify import sympify as sympify
from sympy.tensor.array import ImmutableDenseNDimArray as ImmutableDenseNDimArray

class ArrayComprehension(Basic):
    def __new__(cls, function, *symbols, **assumptions): ...
    @property
    def function(self): ...
    @property
    def limits(self): ...
    @property
    def free_symbols(self): ...
    @property
    def variables(self): ...
    @property
    def bound_symbols(self): ...
    @property
    def shape(self): ...
    @property
    def is_shape_numeric(self): ...
    def rank(self): ...
    def __len__(self) -> int: ...
    def doit(self, **hints): ...
    def tolist(self): ...
    def tomatrix(self): ...

def isLambda(v): ...

class ArrayComprehensionMap(ArrayComprehension):
    def __new__(cls, function, *symbols, **assumptions): ...
    @property
    def func(self): ...
