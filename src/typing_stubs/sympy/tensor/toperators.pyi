from sympy import permutedims as permutedims
from sympy.core.numbers import Number as Number
from sympy.core.singleton import S as S
from sympy.core.symbol import Symbol as Symbol
from sympy.core.sympify import sympify as sympify
from sympy.tensor.tensor import TensAdd as TensAdd, TensExpr as TensExpr, TensMul as TensMul, Tensor as Tensor

class PartialDerivative(TensExpr):
    def __new__(cls, expr, *variables): ...
    @property
    def coeff(self): ...
    @property
    def nocoeff(self): ...
    def doit(self, **hints): ...
    def get_indices(self): ...
    def get_free_indices(self): ...
    @property
    def expr(self): ...
    @property
    def variables(self): ...
