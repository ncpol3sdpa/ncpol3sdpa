from _typeshed import Incomplete
from sympy.external import import_module as import_module

autolevparser: Incomplete
autolevlexer: Incomplete
autolevlistener: Incomplete
AutolevParser: Incomplete
AutolevLexer: Incomplete
AutolevListener: Incomplete

def strfunc(z): ...
def declare_phy_entities(self, ctx, phy_type, i, j: Incomplete | None = None) -> None: ...
def declare_frames(self, ctx, i, j: Incomplete | None = None) -> None: ...
def declare_points(self, ctx, i, j: Incomplete | None = None) -> None: ...
def declare_particles(self, ctx, i, j: Incomplete | None = None) -> None: ...
def declare_bodies(self, ctx, i, j: Incomplete | None = None) -> None: ...
def inertia_func(self, v1, v2, l, frame) -> None: ...
def processConstants(self, ctx) -> None: ...
def writeConstants(self, ctx): ...
def processVariables(self, ctx) -> None: ...
def writeVariables(self, ctx): ...
def processImaginary(self, ctx) -> None: ...
def writeImaginary(self, ctx) -> None: ...

class MyListener(AutolevListener):
    tree_property: Incomplete
    symbol_table: Incomplete
    symbol_table2: Incomplete
    sign: Incomplete
    var_list: Incomplete
    type: Incomplete
    type2: Incomplete
    matrix_expr: Incomplete
    numeric_expr: Incomplete
    vector_expr: Incomplete
    fr_expr: Incomplete
    output_code: Incomplete
    explicit: Incomplete
    maxDegree: int
    inputs: Incomplete
    outputs: Incomplete
    settings: Incomplete
    in_inputs: bool
    in_outputs: bool
    newtonian: Incomplete
    bodies: Incomplete
    constants: Incomplete
    forces: Incomplete
    q_ind: Incomplete
    q_dep: Incomplete
    u_ind: Incomplete
    u_dep: Incomplete
    kd_eqs: Incomplete
    dependent_variables: Incomplete
    kd_equivalents: Incomplete
    kd_equivalents2: Incomplete
    kd_eqs_supplied: Incomplete
    kane_type: str
    inertia_point: Incomplete
    kane_parsed: bool
    t: bool
    include_numeric: Incomplete
    def __init__(self, include_numeric: bool = False) -> None: ...
    def write(self, string) -> None: ...
    def getValue(self, node): ...
    def setValue(self, node, value) -> None: ...
    def getSymbolTable(self): ...
    def getType(self): ...
    def exitVarDecl(self, ctx) -> None: ...
    def exitVarType(self, ctx) -> None: ...
    def exitVarDecl2(self, ctx) -> None: ...
    def exitId(self, ctx) -> None: ...
    def exitInt(self, ctx) -> None: ...
    def exitFloat(self, ctx) -> None: ...
    def exitAddSub(self, ctx) -> None: ...
    def exitMulDiv(self, ctx) -> None: ...
    def exitNegativeOne(self, ctx) -> None: ...
    def exitParens(self, ctx) -> None: ...
    def exitExponent(self, ctx) -> None: ...
    def exitExp(self, ctx) -> None: ...
    def exitFunction(self, ctx) -> None: ...
    def exitMatrices(self, ctx) -> None: ...
    def exitVectorOrDyadic(self, ctx) -> None: ...
    def exitIndexing(self, ctx) -> None: ...
    def exitRegularAssign(self, ctx) -> None: ...
    def exitIndexAssign(self, ctx) -> None: ...
    def exitVecAssign(self, ctx) -> None: ...
    def enterInputs2(self, ctx) -> None: ...
    def exitInputs2(self, ctx) -> None: ...
    def enterOutputs(self, ctx) -> None: ...
    def exitOutputs(self, ctx) -> None: ...
    def exitOutputs2(self, ctx) -> None: ...
    def exitCodegen(self, ctx) -> None: ...
    def exitFunctionCall(self, ctx) -> None: ...
    def exitSettings(self, ctx) -> None: ...
    def exitMassDecl2(self, ctx) -> None: ...
    def exitInertiaDecl(self, ctx) -> None: ...
