from .rv import cdf as cdf, characteristic_function as characteristic_function, density as density, dependent as dependent, expectation, given as given, independent as independent, moment_generating_function as moment_generating_function, probability, pspace as pspace, quantile as quantile, random_symbols as random_symbols, sample as sample, sample_iter as sample_iter, sample_stochastic_process as sample_stochastic_process, sampling_density as sampling_density, where as where
from _typeshed import Incomplete

__all__ = ['P', 'E', 'H', 'density', 'where', 'given', 'sample', 'cdf', 'characteristic_function', 'pspace', 'sample_iter', 'variance', 'std', 'skewness', 'kurtosis', 'covariance', 'dependent', 'entropy', 'median', 'independent', 'random_symbols', 'correlation', 'factorial_moment', 'moment', 'cmoment', 'sampling_density', 'moment_generating_function', 'smoment', 'quantile', 'sample_stochastic_process']

def moment(X, n, c: int = 0, condition: Incomplete | None = None, *, evaluate: bool = True, **kwargs): ...
def variance(X, condition: Incomplete | None = None, **kwargs): ...
std = standard_deviation

def entropy(expr, condition: Incomplete | None = None, **kwargs): ...
def covariance(X, Y, condition: Incomplete | None = None, **kwargs): ...
def correlation(X, Y, condition: Incomplete | None = None, **kwargs): ...
def cmoment(X, n, condition: Incomplete | None = None, *, evaluate: bool = True, **kwargs): ...
def smoment(X, n, condition: Incomplete | None = None, **kwargs): ...
def skewness(X, condition: Incomplete | None = None, **kwargs): ...
def kurtosis(X, condition: Incomplete | None = None, **kwargs): ...
def factorial_moment(X, n, condition: Incomplete | None = None, **kwargs): ...
def median(X, evaluate: bool = True, **kwargs): ...
P = probability
E = expectation
H = entropy
