from _typeshed import Incomplete
from sympy.core.power import Pow as Pow
from sympy.core.singleton import S as S
from sympy.core.symbol import Symbol as Symbol
from sympy.core.sympify import sympify as sympify
from sympy.functions.elementary.exponential import log as log
from sympy.functions.elementary.hyperbolic import acoth as acoth, acsch as acsch, asech as asech, atanh as atanh, cosh as cosh, coth as coth, csch as csch, sech as sech, tanh as tanh
from sympy.functions.elementary.trigonometric import cos as cos, cot as cot, csc as csc, sec as sec, tan as tan
from sympy.utilities.misc import filldedent as filldedent

def singularities(expression, symbol, domain: Incomplete | None = None): ...
def monotonicity_helper(expression, predicate, interval=..., symbol: Incomplete | None = None): ...
def is_increasing(expression, interval=..., symbol: Incomplete | None = None): ...
def is_strictly_increasing(expression, interval=..., symbol: Incomplete | None = None): ...
def is_decreasing(expression, interval=..., symbol: Incomplete | None = None): ...
def is_strictly_decreasing(expression, interval=..., symbol: Incomplete | None = None): ...
def is_monotonic(expression, interval=..., symbol: Incomplete | None = None): ...
