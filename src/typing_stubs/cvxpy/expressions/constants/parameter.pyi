from _typeshed import Incomplete
from cvxpy.expressions.leaf import Leaf as Leaf
from cvxpy.utilities import scopes as scopes

def is_param_affine(expr) -> bool: ...
def is_param_free(expr) -> bool: ...

class Parameter(Leaf):
    PARAM_COUNT: int
    id: Incomplete
    delta: Incomplete
    gradient: Incomplete
    def __init__(self, shape: int | tuple[int, ...] = (), name: str | None = None, value: Incomplete | None = None, id: Incomplete | None = None, **kwargs) -> None: ...
    def get_data(self): ...
    def name(self) -> str: ...
    def is_constant(self) -> bool: ...
    @property
    def grad(self): ...
    def parameters(self) -> list[Parameter]: ...
    def canonicalize(self): ...
