import abc
from _typeshed import Incomplete
from cvxpy.utilities.deterministic import unique_list as unique_list

class Canonical(metaclass=abc.ABCMeta):
    @property
    def expr(self): ...
    def canonical_form(self): ...
    def variables(self): ...
    def parameters(self): ...
    def constants(self): ...
    def tree_copy(self, id_objects: Incomplete | None = None): ...
    def copy(self, args: Incomplete | None = None, id_objects: Incomplete | None = None): ...
    def __copy__(self): ...
    def __deepcopy__(self, memo): ...
    def get_data(self) -> None: ...
    def atoms(self): ...

class DefaultDeepCopyContextManager:
    item: Incomplete
    deepcopy: Incomplete
    def __init__(self, item) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_val: BaseException | None, exc_tb: types.TracebackType | None) -> None: ...
