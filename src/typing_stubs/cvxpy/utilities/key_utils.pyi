from _typeshed import Incomplete

def validate_key(key, shape: tuple[int, ...]): ...
def to_tuple(key): ...
def format_slice(key_val, dim, axis) -> slice | None: ...
def to_int(val, none_val: Incomplete | None = None): ...
def wrap_neg_index(index, dim, neg_step: bool = False): ...
def index_to_slice(idx) -> slice: ...
def slice_to_str(slc): ...
def none_to_empty(val): ...
def is_single_index(slc) -> bool: ...
def shape(key, orig_key, shape: tuple[int, ...]) -> tuple[int, ...]: ...
def to_str(key): ...
def is_special_slice(key) -> bool: ...
def special_key_to_str(key): ...
def pprint_sequence(seq, max_elems: int = 6): ...
