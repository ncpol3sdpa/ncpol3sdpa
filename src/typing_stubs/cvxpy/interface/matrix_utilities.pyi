import numpy as np
from _typeshed import Incomplete

INTERFACES: Incomplete
DEFAULT_NP_INTF = INTERFACES[np.ndarray]
DEFAULT_INTF = INTERFACES[np.ndarray]
DEFAULT_SPARSE_INTF: Incomplete

def get_matrix_interface(target_class): ...
def get_cvxopt_dense_intf(): ...
def get_cvxopt_sparse_intf(): ...
def sparse2cvxopt(value): ...
def dense2cvxopt(value): ...
def cvxopt2dense(value): ...
def is_sparse(constant) -> bool: ...
def shape(constant): ...
def is_vector(constant) -> bool: ...
def is_scalar(constant) -> bool: ...
def from_2D_to_1D(constant): ...
def from_1D_to_2D(constant): ...
def convert(constant, sparse: bool = False, convert_scalars: bool = False): ...
def scalar_value(constant): ...
def sign(constant): ...
def is_complex(constant, tol: float = 1e-05) -> bool: ...
def index(constant, key): ...
def is_hermitian(constant) -> bool: ...
def is_skew_symmetric(constant) -> bool: ...
def is_sparse_symmetric(m, complex: bool = False) -> bool: ...
def is_sparse_skew_symmetric(A) -> bool: ...
