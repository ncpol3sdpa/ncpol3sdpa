from _typeshed import Incomplete
from cvxpy.constraints.constraint import Constraint as Constraint
from cvxpy.utilities import scopes as scopes

class NonPos(Constraint):
    DEPRECATION_MESSAGE: str
    def __init__(self, expr, constr_id: Incomplete | None = None) -> None: ...
    def name(self) -> str: ...
    def is_dcp(self, dpp: bool = False) -> bool: ...
    def is_dgp(self, dpp: bool = False) -> bool: ...
    def is_dqcp(self) -> bool: ...
    @property
    def residual(self): ...
    def violation(self): ...

class NonNeg(Constraint):
    def __init__(self, expr, constr_id: Incomplete | None = None) -> None: ...
    def name(self) -> str: ...
    def is_dcp(self, dpp: bool = False) -> bool: ...
    def is_dgp(self, dpp: bool = False) -> bool: ...
    def is_dqcp(self) -> bool: ...
    @property
    def residual(self): ...
    def violation(self): ...

class Inequality(Constraint):
    def __init__(self, lhs, rhs, constr_id: Incomplete | None = None) -> None: ...
    @property
    def expr(self): ...
    def name(self) -> str: ...
    @property
    def shape(self): ...
    @property
    def size(self): ...
    def is_dcp(self, dpp: bool = False) -> bool: ...
    def is_dgp(self, dpp: bool = False) -> bool: ...
    def is_dpp(self, context: str = 'dcp') -> bool: ...
    def is_dqcp(self) -> bool: ...
    @property
    def residual(self): ...
