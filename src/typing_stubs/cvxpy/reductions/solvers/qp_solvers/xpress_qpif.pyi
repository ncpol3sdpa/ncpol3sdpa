from _typeshed import Incomplete
from cvxpy.reductions.solution import Solution as Solution, failure_solution as failure_solution
from cvxpy.reductions.solvers.conic_solvers.xpress_conif import get_status_maps as get_status_maps, makeMstart as makeMstart
from cvxpy.reductions.solvers.qp_solvers.qp_solver import QpSolver as QpSolver

class XPRESS(QpSolver):
    MIP_CAPABLE: bool
    prob_: Incomplete
    def __init__(self) -> None: ...
    def name(self): ...
    def import_solver(self) -> None: ...
    def apply(self, problem): ...
    def invert(self, results, inverse_data): ...
    def solve_via_data(self, data, warm_start: bool, verbose: bool, solver_opts, solver_cache: Incomplete | None = None): ...
