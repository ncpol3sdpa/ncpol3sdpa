from _typeshed import Incomplete
from cvxpy.reductions.solution import Solution as Solution, failure_solution as failure_solution
from cvxpy.reductions.solvers import utilities as utilities
from cvxpy.reductions.solvers.qp_solvers.qp_solver import QpSolver as QpSolver

def constrain_gurobi_infty(v) -> None: ...

class GUROBI(QpSolver):
    MIP_CAPABLE: bool
    INTERFACE_ARGS: Incomplete
    STATUS_MAP: Incomplete
    def name(self): ...
    def import_solver(self) -> None: ...
    def apply(self, problem): ...
    def invert(self, results, inverse_data): ...
    def solve_via_data(self, data, warm_start: bool, verbose: bool, solver_opts, solver_cache: Incomplete | None = None): ...
