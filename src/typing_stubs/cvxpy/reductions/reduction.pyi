from _typeshed import Incomplete
from abc import ABCMeta, abstractmethod

class Reduction(metaclass=ABCMeta):
    problem: Incomplete
    def __init__(self, problem: Incomplete | None = None) -> None: ...
    def accepts(self, problem) -> None: ...
    def reduce(self): ...
    def retrieve(self, solution): ...
    @abstractmethod
    def apply(self, problem): ...
    @abstractmethod
    def invert(self, solution, inverse_data): ...
