from _typeshed import Incomplete
from cvxpy.constraints import FiniteSet as FiniteSet
from cvxpy.constraints.constraint import Constraint as Constraint
from cvxpy.expressions.variable import Variable as Variable
from cvxpy.reductions.canonicalization import Canonicalization as Canonicalization
from typing import Callable

def exprval_in_vec_ineq(expr, vec): ...
def exprval_in_vec_eq(expr, vec): ...
def get_exprval_in_vec_func(ineq_form: bool) -> Callable: ...
def finite_set_canon(con: FiniteSet, _args) -> tuple[Constraint, list]: ...

class Valinvec2mixedint(Canonicalization):
    def accepts(self, problem) -> bool: ...
    CANON_METHODS: Incomplete
    def __init__(self, problem: Incomplete | None = None) -> None: ...
