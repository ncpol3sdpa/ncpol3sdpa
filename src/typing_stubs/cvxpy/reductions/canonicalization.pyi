from _typeshed import Incomplete
from cvxpy import problems as problems
from cvxpy.expressions import cvxtypes as cvxtypes
from cvxpy.expressions.expression import Expression as Expression
from cvxpy.reductions.inverse_data import InverseData as InverseData
from cvxpy.reductions.reduction import Reduction as Reduction
from cvxpy.reductions.solution import Solution as Solution

class Canonicalization(Reduction):
    canon_methods: Incomplete
    def __init__(self, canon_methods, problem: Incomplete | None = None) -> None: ...
    def apply(self, problem): ...
    def invert(self, solution, inverse_data): ...
    def canonicalize_tree(self, expr, canonicalize_params: bool = True): ...
    def canonicalize_expr(self, expr: Expression, args: list, canonicalize_params: bool = True): ...
