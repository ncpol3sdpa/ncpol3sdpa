from _typeshed import Incomplete
from cvxpy.atoms.atom import Atom as Atom
from cvxpy.expressions.variable import Variable as Variable

class SuppFuncAtom(Atom):
    id: Incomplete
    args: Incomplete
    def __init__(self, y, parent) -> None: ...
    def validate_arguments(self) -> None: ...
    def variables(self): ...
    def parameters(self): ...
    def constants(self): ...
    def shape_from_args(self) -> tuple[int, ...]: ...
    def sign_from_args(self) -> tuple[bool, bool]: ...
    def is_nonneg(self) -> bool: ...
    def is_nonpos(self) -> bool: ...
    def is_imag(self) -> bool: ...
    def is_complex(self) -> bool: ...
    def is_atom_convex(self) -> bool: ...
    def is_atom_concave(self) -> bool: ...
    def is_atom_log_log_convex(self) -> bool: ...
    def is_atom_log_log_concave(self) -> bool: ...
    def is_atom_quasiconvex(self) -> bool: ...
    def is_atom_quasiconcave(self) -> bool: ...
    def is_incr(self, idx) -> bool: ...
    def is_decr(self, idx) -> bool: ...
    def is_convex(self) -> bool: ...
    def is_concave(self) -> bool: ...
    def is_log_log_convex(self) -> bool: ...
    def is_log_log_concave(self) -> bool: ...
    def is_quasiconvex(self) -> bool: ...
    def is_quasiconcave(self) -> bool: ...
    def __lt__(self, other): ...
    def __gt__(self, other): ...
