from _typeshed import Incomplete
from cvxpy.atoms.atom import Atom as Atom

class sum_largest(Atom):
    k: Incomplete
    def __init__(self, x, k: int) -> None: ...
    def validate_arguments(self) -> None: ...
    def numeric(self, values): ...
    def shape_from_args(self) -> tuple[int, ...]: ...
    def sign_from_args(self) -> tuple[bool, bool]: ...
    def is_atom_convex(self) -> bool: ...
    def is_atom_concave(self) -> bool: ...
    def is_incr(self, idx) -> bool: ...
    def is_decr(self, idx) -> bool: ...
    def is_pwl(self) -> bool: ...
    def get_data(self): ...
