import cvxpy.lin_ops.lin_op as lo
from _typeshed import Incomplete
from cvxpy.atoms.affine.affine_atom import AffAtom as AffAtom
from cvxpy.atoms.axis_atom import AxisAtom as AxisAtom
from cvxpy.constraints.constraint import Constraint as Constraint

class Sum(AxisAtom, AffAtom):
    def __init__(self, expr, axis: Incomplete | None = None, keepdims: bool = False) -> None: ...
    def is_atom_log_log_convex(self) -> bool: ...
    def is_atom_log_log_concave(self) -> bool: ...
    def numeric(self, values): ...
    def graph_implementation(self, arg_objs: list[lo.LinOp], shape: tuple[int, ...], data: Incomplete | None = None) -> tuple[lo.LinOp, list[Constraint]]: ...

def sum(expr, axis: int | None = None, keepdims: bool = False): ...
