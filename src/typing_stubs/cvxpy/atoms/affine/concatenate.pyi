import cvxpy.lin_ops.lin_op as lo
from _typeshed import Incomplete
from cvxpy.atoms.affine.affine_atom import AffAtom as AffAtom
from cvxpy.constraints.constraint import Constraint as Constraint

def concatenate(arg_list, axis: int | None = 0): ...

class Concatenate(AffAtom):
    axis: Incomplete
    def __init__(self, *args) -> None: ...
    def is_atom_log_log_convex(self) -> bool: ...
    def is_atom_log_log_concave(self) -> bool: ...
    def numeric(self, values): ...
    def get_data(self) -> list[int | None]: ...
    def validate_arguments(self) -> None: ...
    def shape_from_args(self) -> tuple[int, ...]: ...
    def graph_implementation(self, arg_objs, shape: tuple[int, ...], data: Incomplete | None = None) -> tuple[lo.LinOp, list[Constraint]]: ...
