import cvxpy.lin_ops.lin_op as lo
import scipy.sparse as sp
from _typeshed import Incomplete
from cvxpy.atoms.affine.affine_atom import AffAtom as AffAtom
from cvxpy.atoms.affine.binary_operators import MulExpression as MulExpression
from cvxpy.atoms.axis_atom import AxisAtom as AxisAtom
from cvxpy.constraints.constraint import Constraint as Constraint
from cvxpy.expressions.expression import Expression as Expression
from cvxpy.expressions.variable import Variable as Variable

def get_diff_mat(dim: int, axis: int) -> sp.csc_matrix: ...

class cumsum(AffAtom, AxisAtom):
    def __init__(self, expr: Expression, axis: int = 0) -> None: ...
    def numeric(self, values): ...
    def shape_from_args(self) -> tuple[int, ...]: ...
    def get_data(self): ...
    def graph_implementation(self, arg_objs, shape: tuple[int, ...], data: Incomplete | None = None) -> tuple[lo.LinOp, list[Constraint]]: ...
