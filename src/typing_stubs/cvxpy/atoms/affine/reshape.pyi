import cvxpy.lin_ops.lin_op as lo
from _typeshed import Incomplete
from cvxpy.atoms.affine.affine_atom import AffAtom as AffAtom
from cvxpy.atoms.affine.hstack import hstack as hstack
from cvxpy.constraints.constraint import Constraint as Constraint
from cvxpy.expressions.expression import DEFAULT_ORDER_DEPRECATION_MSG as DEFAULT_ORDER_DEPRECATION_MSG, Expression as Expression
from cvxpy.utilities.shape import size_from_shape as size_from_shape
from typing import Literal

class reshape(AffAtom):
    order: Incomplete
    def __init__(self, expr, shape: int | tuple[int, ...], order: Literal['F', 'C', None] = None) -> None: ...
    def is_atom_log_log_convex(self) -> bool: ...
    def is_atom_log_log_concave(self) -> bool: ...
    def numeric(self, values): ...
    def validate_arguments(self) -> None: ...
    def shape_from_args(self) -> tuple[int, ...]: ...
    def get_data(self): ...
    def graph_implementation(self, arg_objs, shape: tuple[int, ...], data: Incomplete | None = None) -> tuple[lo.LinOp, list[Constraint]]: ...

def deep_flatten(x): ...
