import cvxpy.lin_ops.lin_op as lo
from _typeshed import Incomplete
from cvxpy.atoms.affine.affine_atom import AffAtom as AffAtom
from cvxpy.constraints.constraint import Constraint as Constraint

class trace(AffAtom):
    def __init__(self, expr) -> None: ...
    def sign_from_args(self) -> tuple[bool, bool]: ...
    def numeric(self, values): ...
    def validate_arguments(self) -> None: ...
    def shape_from_args(self) -> tuple[int, ...]: ...
    def is_real(self) -> bool: ...
    def is_complex(self) -> bool: ...
    def is_atom_log_log_convex(self) -> bool: ...
    def is_atom_log_log_concave(self) -> bool: ...
    def graph_implementation(self, arg_objs, shape: tuple[int, ...], data: Incomplete | None = None) -> tuple[lo.LinOp, list[Constraint]]: ...
