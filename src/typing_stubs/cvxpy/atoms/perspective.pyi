import numpy as np
from _typeshed import Incomplete
from cvxpy.atoms.atom import Atom as Atom
from cvxpy.expressions.constants.parameter import is_param_free as is_param_free
from cvxpy.expressions.expression import Expression as Expression
from cvxpy.expressions.variable import Variable as Variable
from cvxpy.utilities import scopes as scopes

class perspective(Atom):
    f: Incomplete
    f_recession: Incomplete
    def __init__(self, f: Expression, s: Variable, f_recession: Expression = None) -> None: ...
    def validate_arguments(self) -> None: ...
    def numeric(self, values: list[np.ndarray, np.ndarray]) -> np.ndarray: ...
    def sign_from_args(self) -> tuple[bool, bool]: ...
    def is_atom_convex(self) -> bool: ...
    def is_atom_concave(self) -> bool: ...
    def is_incr(self, idx) -> bool: ...
    def is_decr(self, idx: int) -> bool: ...
    def shape_from_args(self) -> tuple[int, ...]: ...
