from _typeshed import Incomplete
from cvxpy.atoms.axis_atom import AxisAtom as AxisAtom
from cvxpy.atoms.norm1 import norm1 as norm1
from cvxpy.atoms.norm_inf import norm_inf as norm_inf
from cvxpy.constraints.constraint import Constraint as Constraint
from cvxpy.utilities.power_tools import pow_high as pow_high, pow_mid as pow_mid, pow_neg as pow_neg

def pnorm(x, p: int | str = 2, axis: Incomplete | None = None, keepdims: bool = False, max_denom: int = 1024): ...

class Pnorm(AxisAtom):
    approx_error: Incomplete
    original_p: Incomplete
    def __init__(self, x, p: int = 2, axis: Incomplete | None = None, keepdims: bool = False, max_denom: int = 1024) -> None: ...
    def numeric(self, values): ...
    def validate_arguments(self) -> None: ...
    def sign_from_args(self) -> tuple[bool, bool]: ...
    def is_atom_convex(self) -> bool: ...
    def is_atom_concave(self) -> bool: ...
    def is_atom_log_log_convex(self) -> bool: ...
    def is_atom_log_log_concave(self) -> bool: ...
    def is_incr(self, idx) -> bool: ...
    def is_decr(self, idx) -> bool: ...
    def is_pwl(self) -> bool: ...
    def get_data(self): ...
    def name(self) -> str: ...
