# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml



stages:
  - build
  - test
  - deploy

variables:
  PYTHON_VERSION: "3.13"
  UV_VERSION: "0.5.5"
  BASE_LAYER: bookworm-slim
  IMAGE: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER

image: $IMAGE

before_script:
  - echo "Setting up the environment..."
  - uv run python3 --version


###########################################
#                                         #
#               Build Stage               #
#                                         #
###########################################

uv-install:
  stage: build
  variables:
    UV_CACHE_DIR: .uv-cache
  cache:
    key:
      files:
        - uv.lock
    paths:
      - $UV_CACHE_DIR
  script:
    - uv cache prune --ci
    - uv pip install --system -e .


###########################################
#                                         #
#               Test Stage                #
#                                         #
###########################################

# This job runs the tests using Pytest
pytest:
  stage: test
  script:
    - echo "Running Pytest..."
    - mkdir $HOME/mosek
    - touch $HOME/mosek/mosek.lic
    - echo "$MOSEK_LICENSE" >> $HOME/mosek/mosek.lic
    - echo "Mosek license file created at $HOME/mosek/mosek.lic\n"
    # Executes pytest to run all test files in the project.
    # Options:
    # - `--durations=20`: Shows the 20 slowest test executions
    # - `--cov=src`: Measures code coverage for the 'src' directory
    # - `--cov-report=xml:docs/source/coverage.xml`: Generates an XML coverage report at the specified path
    - uv run pytest --durations=20 --cov=src --cov-report=xml:docs/source/coverage.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: docs/source/coverage.xml
    paths:
      - docs/source/coverage.xml
    expire_in: 1 week

# This job checks the code for type errors using Mypy
mypy:
  stage: test
  script:
    - echo "Running Mypy..."
    - uv run mypy
    - echo "Mypy complete"
  allow_failure: false

# This job checks the code for style violations using Ruff
ruff-check-src:
  stage: test
  script:
    - echo "Running Ruff..."
    - uvx ruff check src
    - echo "Ruff complete"
  allow_failure: true

# ruff-check-tests:
#   stage: test
#   script:
#     - echo "Running Ruff..."
#     - uvx ruff check tests
#     - echo "Ruff complete"
#   allow_failure: true

###########################################
#                                         #
#               Deploy Stage              #
#                                         #
###########################################

# The deploy job has been disabled for now.
# Gitlab Pages is unavailable for us,
# so we used GitHub Actions for deployment instead.

# pages:
#   stage: deploy
#   script:
#   - echo "Deploying documentation..."
#   - uv run sphinx-build --version
#   - cd docs
#   - make html
#   - yes "" | make latexpdf
#   - cd ..
#   # - uv run sphinx-build -b html docs/source public
#   # - uv run sphinx-build -b latex docs/source docs/build/latex
#   # - make -C docs/build/latex
